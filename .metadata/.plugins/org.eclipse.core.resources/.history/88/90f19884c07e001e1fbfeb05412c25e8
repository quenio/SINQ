package org.sinq

case class DataSet[T](i: Iterable[T]) {
    
  def filter(filter: T => Boolean) = Query(this, filter, null)

  def map[S](selector: T => S) = Query(this, null, selector)

  def foreach(block: T => Unit) = i.foreach(block)

  def select[S](selector: T => S) = i.map(selector)
  
  def where(filter: T => Boolean) = i.filter(filter)
  
}
