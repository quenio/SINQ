package org.sinq

case class Query[T, S](dataSet: DataSet[T], filter: T => Boolean, selector: T => S) {

  def map[S](selector: T => S) = Query(dataSet, filter, selector)
  
  def foreach(block: S => Unit) = {
    
    val filtered =  
    
    val selection = if (filtered == null)
      filtered.map(selector)
    else
      dataSet.select(selector)
    
    selection.foreach(block)
  }
  
  private val filtered = 
    if (filter == null) 
      null
    else 
      dataSet.where(filter)
  
  private val selection =
}
